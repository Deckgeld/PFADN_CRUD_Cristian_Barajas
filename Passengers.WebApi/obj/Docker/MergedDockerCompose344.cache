name: dockercompose1606922811225490709
services:
  journey.db:
    container_name: journey.db
    environment:
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.33
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "33071"
      protocol: tcp
    volumes:
    - type: volume
      source: datajourney
      target: /var/lib/mysql
      volume: {}
  journey.webapi:
    build:
      context: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Journey.WebApi
      dockerfile: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Journey.WebApi\Journey.WebApi
    image: journeywebapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5001"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "778"
      protocol: tcp
    restart: always
  journeylogs:
    container_name: journey.logs
    environment:
      MYSQL_DATABASE: logs
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.33
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "33072"
      protocol: tcp
    restart: always
  passengers.db:
    container_name: passagers.db
    environment:
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.33
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "33061"
      protocol: tcp
    volumes:
    - type: volume
      source: datapassengers
      target: /var/lib/mysql
      volume: {}
  passengers.webapi:
    build:
      context: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Passengers.WebApi
      dockerfile: Passengers.WebApi/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Passengers.WebApi
      target: base
    container_name: Passengers.WebApi_1
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: passengerswebapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Passengers.WebApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "5000"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "777"
      protocol: tcp
    restart: always
    tty: true
    volumes:
    - type: bind
      source: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Passengers.WebApi\Passengers.WebApi
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Deck\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Deck\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Deck\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Deck\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Passengers.WebApi
      target: /src
      bind:
        create_host_path: true
  passengerslogs:
    container_name: passagers.logs
    environment:
      MYSQL_DATABASE: logs
      MYSQL_ROOT_PASSWORD: admin
    image: mysql:8.0.33
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "33062"
      protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose1606922811225490709_default
volumes:
  datajourney:
    name: dockercompose1606922811225490709_datajourney
  datapassengers:
    name: dockercompose1606922811225490709_datapassengers