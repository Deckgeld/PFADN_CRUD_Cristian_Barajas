name: dockercompose1606922811225490709
services:
  adminer:
    container_name: adminer_passager
    image: adminer
    networks:
      passagersNetwork: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: always
  mySQL:
    command:
    - --default-authentication-plugin=mysql_native_password
    container_name: mysql_passagers
    environment:
      MYSQL_ROOT_PASSWORD: example
    image: mysql
    networks:
      passagersNetwork: null
    restart: always
    volumes:
    - type: volume
      source: mysql
      target: /var/lib/mysql
      volume: {}
  passengers.webapi:
    build:
      context: D:\Deck\Documents\GitHub\CRUD_Cristian_Barajas\Passengers.WebApi
      dockerfile: Passengers.WebApi/Dockerfile
    container_name: webapi_passenger
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: passengerswebapi
    networks:
      passagersNetwork: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Deck\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Deck\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  passagersNetwork:
    name: dockercompose1606922811225490709_passagersNetwork
    driver: bridge
volumes:
  mysql:
    name: dockercompose1606922811225490709_mysql